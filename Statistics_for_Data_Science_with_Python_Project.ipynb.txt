{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "# Statistics for Data Science with Python Project"
        },
        {
            "cell_type": "code",
            "execution_count": 1,
            "metadata": {},
            "outputs": [],
            "source": "import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport scipy.stats\nfrom math import sqrt\nimport statsmodels.api as sm"
        },
        {
            "cell_type": "code",
            "execution_count": 2,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>CRIM</th>\n      <th>ZN</th>\n      <th>INDUS</th>\n      <th>CHAS</th>\n      <th>NOX</th>\n      <th>RM</th>\n      <th>AGE</th>\n      <th>DIS</th>\n      <th>RAD</th>\n      <th>TAX</th>\n      <th>PTRATIO</th>\n      <th>LSTAT</th>\n      <th>MEDV</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0.00632</td>\n      <td>18.0</td>\n      <td>2.31</td>\n      <td>0.0</td>\n      <td>0.538</td>\n      <td>6.575</td>\n      <td>65.2</td>\n      <td>4.0900</td>\n      <td>1.0</td>\n      <td>296.0</td>\n      <td>15.3</td>\n      <td>4.98</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.02731</td>\n      <td>0.0</td>\n      <td>7.07</td>\n      <td>0.0</td>\n      <td>0.469</td>\n      <td>6.421</td>\n      <td>78.9</td>\n      <td>4.9671</td>\n      <td>2.0</td>\n      <td>242.0</td>\n      <td>17.8</td>\n      <td>9.14</td>\n      <td>21.6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0.02729</td>\n      <td>0.0</td>\n      <td>7.07</td>\n      <td>0.0</td>\n      <td>0.469</td>\n      <td>7.185</td>\n      <td>61.1</td>\n      <td>4.9671</td>\n      <td>2.0</td>\n      <td>242.0</td>\n      <td>17.8</td>\n      <td>4.03</td>\n      <td>34.7</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>0.03237</td>\n      <td>0.0</td>\n      <td>2.18</td>\n      <td>0.0</td>\n      <td>0.458</td>\n      <td>6.998</td>\n      <td>45.8</td>\n      <td>6.0622</td>\n      <td>3.0</td>\n      <td>222.0</td>\n      <td>18.7</td>\n      <td>2.94</td>\n      <td>33.4</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>0.06905</td>\n      <td>0.0</td>\n      <td>2.18</td>\n      <td>0.0</td>\n      <td>0.458</td>\n      <td>7.147</td>\n      <td>54.2</td>\n      <td>6.0622</td>\n      <td>3.0</td>\n      <td>222.0</td>\n      <td>18.7</td>\n      <td>5.33</td>\n      <td>36.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "   Unnamed: 0     CRIM    ZN  INDUS  CHAS    NOX     RM   AGE     DIS  RAD  \\\n0           0  0.00632  18.0   2.31   0.0  0.538  6.575  65.2  4.0900  1.0   \n1           1  0.02731   0.0   7.07   0.0  0.469  6.421  78.9  4.9671  2.0   \n2           2  0.02729   0.0   7.07   0.0  0.469  7.185  61.1  4.9671  2.0   \n3           3  0.03237   0.0   2.18   0.0  0.458  6.998  45.8  6.0622  3.0   \n4           4  0.06905   0.0   2.18   0.0  0.458  7.147  54.2  6.0622  3.0   \n\n     TAX  PTRATIO  LSTAT  MEDV  \n0  296.0     15.3   4.98  24.0  \n1  242.0     17.8   9.14  21.6  \n2  242.0     17.8   4.03  34.7  \n3  222.0     18.7   2.94  33.4  \n4  222.0     18.7   5.33  36.2  "
                    },
                    "execution_count": 2,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "boston_url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ST0151EN-SkillsNetwork/labs/boston_housing.csv'\nboston_df  = pd.read_csv(boston_url)\nboston_df.head()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### For the \"Median value of owner-occupied homes\" provide a boxplot"
        },
        {
            "cell_type": "code",
            "execution_count": 3,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "ax = sns.boxplot(y=\"MEDV\", data=boston_df)\nplt.title('Median Value of Owner-Occupied Homes')\nplt.ylabel(\"Median Value ($K)\")\nplt.show()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 1: The median value of owner-occupied homes is 22000"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Provide a histogram for the Charles river variable"
        },
        {
            "cell_type": "code",
            "execution_count": 4,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "Text(0, 0.5, 'Count of Properties')"
                    },
                    "execution_count": 4,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "plt.hist(boston_df['CHAS'])\nplt.title('Home Values by Charles River Bounding')\nplt.xlabel(\"Median Value ($K)\")\nplt.ylabel(\"Count of Properties\")"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 2: Over 400 of the homes have a low median value"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Provide a boxplot for the MEDV variable vs the AGE variable.\n(Discretize the age variable into three groups of 35 years and younger, between 35 and 70 years and 70 years and older)"
        },
        {
            "cell_type": "code",
            "execution_count": 5,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "Text(0, 0.5, 'Age Ranges')"
                    },
                    "execution_count": 5,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "df_ages = pd.DataFrame({'MEDV': boston_df['MEDV']})\ndf_ages['AGE_bins'] = pd.cut(x=boston_df['AGE'], bins=[0, 35, 70, max(boston_df['AGE'])])\nax = sns.boxplot(x=\"MEDV\", y='AGE_bins', data=df_ages)\nplt.xlabel(\"Median Value ($K)\")\nplt.ylabel(\"Age Ranges\")"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 3: Highest median value of homes belongs to the youngest age group"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Provide a scatter plot to show the relationship between Nitric oxide concentrations and the proportion of non-retail business acres per town.\nWhat can you say about the relationship?"
        },
        {
            "cell_type": "code",
            "execution_count": 6,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "ax = sns.scatterplot(x='NOX', y='INDUS', data=boston_df)"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 4: The lower the nitric oxide concentrations in towns, the lower proportions of non-retail business acres per town"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Create a histogram for the pupil to teacher ratio variable"
        },
        {
            "cell_type": "code",
            "execution_count": 7,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(array([ 15.,   2.,  58.,  15.,  35.,  69.,  76.,  40., 178.,  18.]),\n array([12.6 , 13.54, 14.48, 15.42, 16.36, 17.3 , 18.24, 19.18, 20.12,\n        21.06, 22.  ]),\n <a list of 10 Patch objects>)"
                    },
                    "execution_count": 7,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "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\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "plt.hist(boston_df['PTRATIO'])"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Is there a significant difference in median value of homes bounded by the Charles river or not? (T-test for independent samples)\n\nNull Hypothesis: there is no difference in median values of homes bounded by the Charles River\n\nAlternate Hypothesis: There is significant difference in the median values of homes bounded by the Charles River"
        },
        {
            "cell_type": "code",
            "execution_count": 8,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "T-Test_Statistic: -3.996437466090509, P-Value: 7.390623170519905e-05\n"
                }
            ],
            "source": "tt_statistic, p_value = scipy.stats.ttest_ind(boston_df[boston_df['CHAS'] == 0]['MEDV'],\n                                             boston_df[boston_df['CHAS'] == 1]['MEDV'],\n                                             equal_var = True)\nprint(\"T-Test_Statistic: {0}, P-Value: {1}\".format(tt_statistic,p_value))"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 5: With a p-value less than 0.05 we reject the null hypothesis.\n\nThere's a significant difference in median values of homes bounded by the Charles river"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Is there a difference in Median values of homes (MEDV) for each proportion of owner occupied units built prior to 1940 (AGE)? (ANOVA)\n\nNull Hypothesis: Median values of homes for each proportion of owner occupied units built prior to 1940 is the same.\n\nAlternate Hypothesis: There is a difference in the median values of homes for each proportion of owner occupied units built prior to 1940"
        },
        {
            "cell_type": "code",
            "execution_count": 9,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "F_Statistic: 36.40764999196599, P-Value: 1.7105011022702984e-15\n"
                }
            ],
            "source": "age_group_1 = boston_df[boston_df['AGE'] <= 35]['MEDV']\nage_group_2 = boston_df[(boston_df['AGE'] > 35) & (boston_df['AGE']<= 70)]['MEDV']\nage_group_3 = boston_df[boston_df['AGE'] > 70]['MEDV']\nf_statistic, p_value = scipy.stats.f_oneway(age_group_1,age_group_2,age_group_3)\nprint(\"F_Statistic: {0}, P-Value: {1}\".format(f_statistic,p_value))"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 6: With a p-value less than 0.05, we reject the null hypothesis.\n\nThere's a significant difference in median values of homes for each proportion of owner occupied units built prior to 1940"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Can we conclude that there is no relationship between Nitric oxide concentrations and proportion of non-retail business acres per town? (Pearson Correlation)\n\nNull Hypothesis: Nitric Oxide concentrations is not correlated with proportion of non-retail business acres per town\n\nAlternate Hypothesis: Nitric Oxide concentrations is correlated with proportion of non-retail business acres per town"
        },
        {
            "cell_type": "code",
            "execution_count": 10,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Pearson Correlation: 0.763651446920915, P-Value: 7.913361061239593e-98\n"
                }
            ],
            "source": "p_statistic,p_value = scipy.stats.pearsonr(boston_df['NOX'], boston_df['INDUS'])\nprint(\"Pearson Correlation: {0}, P-Value: {1}\".format(p_statistic,p_value))"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 7: Since the p-value < 0.05, we reject the null hypothesis\n\nThere exists a relationship between Nitric oxide concentrations and proportion of non-retail business acres per town"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### What is the impact of an additional weighted distance to the five Boston employment centres on the median value of owner occupied homes? (Regression analysis)\n\nNull Hypothesis: Additional weighted distance to the five Boston employment centres has no impact on the median value of owner occupied homes\n\nAlternate Hypothesis: Additional weighted distance to the five Boston employment centres has impact on the median value of owner occupied homes"
        },
        {
            "cell_type": "code",
            "execution_count": 11,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<table class=\"simpletable\">\n<caption>OLS Regression Results</caption>\n<tr>\n  <th>Dep. Variable:</th>          <td>MEDV</td>       <th>  R-squared:         </th> <td>   0.062</td>\n</tr>\n<tr>\n  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.061</td>\n</tr>\n<tr>\n  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   33.58</td>\n</tr>\n<tr>\n  <th>Date:</th>             <td>Tue, 01 Dec 2020</td> <th>  Prob (F-statistic):</th> <td>1.21e-08</td>\n</tr>\n<tr>\n  <th>Time:</th>                 <td>17:00:48</td>     <th>  Log-Likelihood:    </th> <td> -1823.9</td>\n</tr>\n<tr>\n  <th>No. Observations:</th>      <td>   506</td>      <th>  AIC:               </th> <td>   3652.</td>\n</tr>\n<tr>\n  <th>Df Residuals:</th>          <td>   504</td>      <th>  BIC:               </th> <td>   3660.</td>\n</tr>\n<tr>\n  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>   \n</tr>\n<tr>\n  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>const</th> <td>   18.3901</td> <td>    0.817</td> <td>   22.499</td> <td> 0.000</td> <td>   16.784</td> <td>   19.996</td>\n</tr>\n<tr>\n  <th>DIS</th>   <td>    1.0916</td> <td>    0.188</td> <td>    5.795</td> <td> 0.000</td> <td>    0.722</td> <td>    1.462</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n  <th>Omnibus:</th>       <td>139.779</td> <th>  Durbin-Watson:     </th> <td>   0.570</td>\n</tr>\n<tr>\n  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td> 305.104</td>\n</tr>\n<tr>\n  <th>Skew:</th>          <td> 1.466</td>  <th>  Prob(JB):          </th> <td>5.59e-67</td>\n</tr>\n<tr>\n  <th>Kurtosis:</th>      <td> 5.424</td>  <th>  Cond. No.          </th> <td>    9.32</td>\n</tr>\n</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.",
                        "text/plain": "<class 'statsmodels.iolib.summary.Summary'>\n\"\"\"\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                   MEDV   R-squared:                       0.062\nModel:                            OLS   Adj. R-squared:                  0.061\nMethod:                 Least Squares   F-statistic:                     33.58\nDate:                Tue, 01 Dec 2020   Prob (F-statistic):           1.21e-08\nTime:                        17:00:48   Log-Likelihood:                -1823.9\nNo. Observations:                 506   AIC:                             3652.\nDf Residuals:                     504   BIC:                             3660.\nDf Model:                           1                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst         18.3901      0.817     22.499      0.000      16.784      19.996\nDIS            1.0916      0.188      5.795      0.000       0.722       1.462\n==============================================================================\nOmnibus:                      139.779   Durbin-Watson:                   0.570\nProb(Omnibus):                  0.000   Jarque-Bera (JB):              305.104\nSkew:                           1.466   Prob(JB):                     5.59e-67\nKurtosis:                       5.424   Cond. No.                         9.32\n==============================================================================\n\nWarnings:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n\"\"\""
                    },
                    "execution_count": 11,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "## X is the input variables (or independent variables)\nX = boston_df['DIS']\n## y is the target/dependent variable\ny = boston_df['MEDV']\n## add an intercept (beta_0) to our model\nX = sm.add_constant(X) \n\nmodel = sm.OLS(y, X).fit()\npredictions = model.predict(X)\n\n# Print out the statistics\nmodel.summary()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Answer 8: Since p is < 0.05, we will reject the null hypothesis\n\nThere additional weighted distance seems to have an impact on median values of owner occupied homes."
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3.7",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.7.9"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 1
}